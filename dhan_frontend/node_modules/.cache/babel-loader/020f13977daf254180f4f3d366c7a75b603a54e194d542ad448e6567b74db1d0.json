{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-alphavantage\\\\src\\\\components\\\\PnlReport.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const PnLReport = () => {\n//   const [orderId, setOrderId] = useState('');\n//   const [pnlData, setPnlData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const fetchPnLReport = async () => {\n//     if (!orderId) {\n//       setError(\"Order ID is required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError('');\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\n//       setPnlData(response.data);\n//     } catch (err) {\n//       setError(\"Error fetching data from the backend.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Binance Order PnL Report</h1>\n//       <input \n//         type=\"text\" \n//         placeholder=\"Enter Order ID\" \n//         value={orderId} \n//         onChange={(e) => setOrderId(e.target.value)} \n//       />\n//       <button onClick={fetchPnLReport} disabled={loading}>\n//         {loading ? 'Loading...' : 'Get PnL Report'}\n//       </button>\n\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n\n//       {pnlData && (\n//         <div>\n//           <h2>Order PnL Details</h2>\n//           <p>Order ID: {pnlData.orderId}</p>\n//           <p>Symbol: {pnlData.symbol}</p>\n//           <p>Buy Price: {pnlData.buyPrice}</p>\n//           <p>Current Price: {pnlData.currentPrice}</p>\n//           <p>Quantity: {pnlData.quantity}</p>\n//           <p>Realized PnL: {pnlData.realizedPnL}</p>\n//           <p>Unrealized PnL: {pnlData.unrealizedPnL}</p>\n//           <p>PnL Percentage: {pnlData.pnlPercentage}%</p>\n//           <p>profit: {pnlData.profit}</p>\n//           <p>loss: {pnlData.loss}</p>\n//           <p>sellStatus: {pnlData.sellStatus}</p>\n\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PnLReport;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from \"react-router-dom\";\n\n// const PnLReport = () => {\n//   const navigate = useNavigate();\n//   const [orderId, setOrderId] = useState('');\n//   const [pnlData, setPnlData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState(false); // Success message state\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const fetchPnLReport = async () => {\n//     if (!orderId) {\n//       setError(\"Order ID is required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError('');\n//     setSuccess(false); // Reset success message\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\n//       setPnlData(response.data);\n//       setSuccess(true); // Show success message\n\n//       // Hide success message after 3 seconds\n//       setTimeout(() => setSuccess(false), 3000);\n\n//       setOrderId(''); // Clear input after fetching\n//     } catch (err) {\n//       setError(\"Error fetching data from the backend.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-md mx-auto\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Binance Order PnL Report</h1>\n//       <input \n//         type=\"text\"\n//         placeholder=\"Enter Order ID\"\n//         value={orderId}\n//         onChange={(e) => setOrderId(e.target.value)}\n//         className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//       />\n//       <button \n//         onClick={fetchPnLReport} \n//         disabled={loading}\n//         className=\"w-full p-2 mt-3 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\"\n//       >\n//         {loading ? 'Loading...' : 'Get PnL Report'}\n//       </button>\n\n//       <button\n//         onClick={() => navigate(\"/\")}\n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//       </button>\n\n//       {error && <div className=\"mt-4 p-2 bg-red-600 text-white rounded\">{error}</div>}\n//       {success && <div className=\"mt-4 p-2 bg-green-600 text-white rounded\">PnL Report Fetched Successfully!</div>}\n\n//       {/* Popup Message */}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n\n//       {pnlData && (\n//         <div className=\"mt-4 p-4 bg-gray-700 rounded-lg\">\n//           <h2 className=\"text-xl font-bold\">Order PnL Details</h2>\n//           <p><strong>Order ID:</strong> {pnlData.orderId}</p>\n//           <p><strong>Symbol:</strong> {pnlData.symbol}</p>\n//           <p><strong>Buy Price:</strong> {pnlData.buyPrice}</p>\n//           <p><strong>Current Price:</strong> {pnlData.currentPrice}</p>\n//           <p><strong>Quantity:</strong> {pnlData.quantity}</p>\n//           <p><strong>Realized PnL:</strong> {pnlData.realizedPnL}</p>\n//           <p><strong>Unrealized PnL:</strong> {pnlData.unrealizedPnL}</p>\n//           <p><strong>PnL Percentage:</strong> {pnlData.pnlPercentage}%</p>\n//           <p><strong>Profit:</strong> {pnlData.profit}</p>\n//           <p><strong>Loss:</strong> {pnlData.loss}</p>\n//           <p><strong>Sell Status:</strong> {pnlData.sellStatus}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PnLReport;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from \"react-router-dom\";\n\n// const PnLReport = () => {\n//   const navigate = useNavigate();\n//   const [orderId, setOrderId] = useState('');\n//   const [pnlData, setPnlData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [showPopup, setShowPopup] = useState(false); // Popup state\n\n//   const fetchPnLReport = async () => {\n//     if (!orderId.trim()) {\n//       setError(\"Order ID is required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError('');\n//     setShowPopup(false); // Hide popup initially\n\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\n//       setPnlData(response.data);\n\n//       // Show popup message\n//       setShowPopup(true);\n//       setTimeout(() => setShowPopup(false), 3000); // Hide after 3 seconds\n\n//       setOrderId(''); // Clear input field\n//     } catch (err) {\n//       setError(\"Error fetching data from the backend.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-md mx-auto\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Binance Order PnL Report</h1>\n\n//       <input \n//         type=\"text\"\n//         placeholder=\"Enter Order ID\"\n//         value={orderId}\n//         onChange={(e) => setOrderId(e.target.value)}\n//         className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//       />\n\n//       <button \n//         onClick={fetchPnLReport} \n//         disabled={loading}\n//         className=\"w-full p-2 mt-3 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\"\n//       >\n//         {loading ? 'Loading...' : 'Get PnL Report'}\n//       </button>\n\n//       <button\n//         onClick={() => navigate(\"/\")}\n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//       </button>\n\n//       {error && <div className=\"mt-4 p-2 bg-red-600 text-white rounded\">{error}</div>}\n\n//       {/* Popup Message */}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           PnL Report Fetched Successfully!\n//         </div>\n//       )}\n\n//       {pnlData && (\n//         <div className=\"mt-4 p-4 bg-gray-700 rounded-lg\">\n//           <h2 className=\"text-xl font-bold\">Order PnL Details</h2>\n//           <p><strong>Order ID:</strong> {pnlData.orderId}</p>\n//           <p><strong>Symbol:</strong> {pnlData.symbol}</p>\n//           <p><strong>Buy Price:</strong> {pnlData.buyPrice}</p>\n//           <p><strong>Current Price:</strong> {pnlData.currentPrice}</p>\n//           <p><strong>Quantity:</strong> {pnlData.quantity}</p>\n//           <p><strong>Realized PnL:</strong> {pnlData.realizedPnL}</p>\n//           <p><strong>Unrealized PnL:</strong> {pnlData.unrealizedPnL}</p>\n//           <p><strong>PnL Percentage:</strong> {pnlData.pnlPercentage}%</p>\n//           <p><strong>Profit:</strong> {pnlData.profit}</p>\n//           <p><strong>Loss:</strong> {pnlData.loss}</p>\n//           <p><strong>Sell Status:</strong> {pnlData.sellStatus}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PnLReport;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PnLReport = () => {\n  _s();\n  const navigate = useNavigate();\n  const [orderId, setOrderId] = useState(\"\");\n  const [pnlData, setPnlData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false); // Popup state\n\n  const fetchPnLReport = async () => {\n    if (!orderId.trim()) {\n      setError(\"Order ID is required.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setShowPopup(false); // Hide popup initially\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\n      setPnlData(response.data);\n\n      // Show popup message\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 3000); // Hide after 3 seconds\n\n      setOrderId(\"\"); // Clear input field\n    } catch (err) {\n      setError(\"Error fetching data from the backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Binance Order PnL Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Order ID\",\n        value: orderId,\n        onChange: e => setOrderId(e.target.value),\n        className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPnLReport,\n        disabled: loading,\n        className: \"p-2 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\",\n        children: loading ? \"Loading...\" : \"Get PnL Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      className: \"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-2 bg-red-600 text-white rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\",\n      children: \"PnL Report Fetched Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), pnlData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-left border-collapse border border-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-700 text-yellow-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Realized PnL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Unrealized PnL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"PnL %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-600 p-2\",\n              children: \"Sell Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-800 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.orderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.buyPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.currentPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.realizedPnL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.unrealizedPnL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: [pnlData.pnlPercentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.profit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.loss\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-600 p-2\",\n              children: pnlData.sellStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(PnLReport, \"4jSkM0VobCP1xbggu38iyyK21NU=\", false, function () {\n  return [useNavigate];\n});\n_c = PnLReport;\nexport default PnLReport;\nvar _c;\n$RefreshReg$(_c, \"PnLReport\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","PnLReport","_s","navigate","orderId","setOrderId","pnlData","setPnlData","loading","setLoading","error","setError","showPopup","setShowPopup","fetchPnLReport","trim","response","get","data","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","symbol","buyPrice","currentPrice","quantity","realizedPnL","unrealizedPnL","pnlPercentage","profit","loss","sellStatus","_c","$RefreshReg$"],"sources":["D:/stock-alphavantage/src/components/PnlReport.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const PnLReport = () => {\r\n//   const [orderId, setOrderId] = useState('');\r\n//   const [pnlData, setPnlData] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const fetchPnLReport = async () => {\r\n//     if (!orderId) {\r\n//       setError(\"Order ID is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError('');\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\r\n//       setPnlData(response.data);\r\n//     } catch (err) {\r\n//       setError(\"Error fetching data from the backend.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Binance Order PnL Report</h1>\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Enter Order ID\" \r\n//         value={orderId} \r\n//         onChange={(e) => setOrderId(e.target.value)} \r\n//       />\r\n//       <button onClick={fetchPnLReport} disabled={loading}>\r\n//         {loading ? 'Loading...' : 'Get PnL Report'}\r\n//       </button>\r\n\r\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\r\n\r\n//       {pnlData && (\r\n//         <div>\r\n//           <h2>Order PnL Details</h2>\r\n//           <p>Order ID: {pnlData.orderId}</p>\r\n//           <p>Symbol: {pnlData.symbol}</p>\r\n//           <p>Buy Price: {pnlData.buyPrice}</p>\r\n//           <p>Current Price: {pnlData.currentPrice}</p>\r\n//           <p>Quantity: {pnlData.quantity}</p>\r\n//           <p>Realized PnL: {pnlData.realizedPnL}</p>\r\n//           <p>Unrealized PnL: {pnlData.unrealizedPnL}</p>\r\n//           <p>PnL Percentage: {pnlData.pnlPercentage}%</p>\r\n//           <p>profit: {pnlData.profit}</p>\r\n//           <p>loss: {pnlData.loss}</p>\r\n//           <p>sellStatus: {pnlData.sellStatus}</p>\r\n\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PnLReport;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// const PnLReport = () => {\r\n//   const navigate = useNavigate();\r\n//   const [orderId, setOrderId] = useState('');\r\n//   const [pnlData, setPnlData] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [success, setSuccess] = useState(false); // Success message state\r\n//   const [showPopup, setShowPopup] = useState(false);\r\n  \r\n//   const fetchPnLReport = async () => {\r\n//     if (!orderId) {\r\n//       setError(\"Order ID is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setSuccess(false); // Reset success message\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\r\n//       setPnlData(response.data);\r\n//       setSuccess(true); // Show success message\r\n\r\n//       // Hide success message after 3 seconds\r\n//       setTimeout(() => setSuccess(false), 3000);\r\n\r\n//       setOrderId(''); // Clear input after fetching\r\n//     } catch (err) {\r\n//       setError(\"Error fetching data from the backend.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-md mx-auto\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Binance Order PnL Report</h1>\r\n//       <input \r\n//         type=\"text\"\r\n//         placeholder=\"Enter Order ID\"\r\n//         value={orderId}\r\n//         onChange={(e) => setOrderId(e.target.value)}\r\n//         className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\r\n//       />\r\n//       <button \r\n//         onClick={fetchPnLReport} \r\n//         disabled={loading}\r\n//         className=\"w-full p-2 mt-3 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\"\r\n//       >\r\n//         {loading ? 'Loading...' : 'Get PnL Report'}\r\n//       </button>\r\n\r\n//       <button\r\n//         onClick={() => navigate(\"/\")}\r\n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\r\n//       >\r\n//         Back to Dashboard\r\n//       </button>\r\n\r\n//       {error && <div className=\"mt-4 p-2 bg-red-600 text-white rounded\">{error}</div>}\r\n//       {success && <div className=\"mt-4 p-2 bg-green-600 text-white rounded\">PnL Report Fetched Successfully!</div>}\r\n\r\n//       {/* Popup Message */}\r\n//       {showPopup && (\r\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\r\n//           Order created successfully!\r\n//         </div>\r\n//       )}\r\n\r\n//       {pnlData && (\r\n//         <div className=\"mt-4 p-4 bg-gray-700 rounded-lg\">\r\n//           <h2 className=\"text-xl font-bold\">Order PnL Details</h2>\r\n//           <p><strong>Order ID:</strong> {pnlData.orderId}</p>\r\n//           <p><strong>Symbol:</strong> {pnlData.symbol}</p>\r\n//           <p><strong>Buy Price:</strong> {pnlData.buyPrice}</p>\r\n//           <p><strong>Current Price:</strong> {pnlData.currentPrice}</p>\r\n//           <p><strong>Quantity:</strong> {pnlData.quantity}</p>\r\n//           <p><strong>Realized PnL:</strong> {pnlData.realizedPnL}</p>\r\n//           <p><strong>Unrealized PnL:</strong> {pnlData.unrealizedPnL}</p>\r\n//           <p><strong>PnL Percentage:</strong> {pnlData.pnlPercentage}%</p>\r\n//           <p><strong>Profit:</strong> {pnlData.profit}</p>\r\n//           <p><strong>Loss:</strong> {pnlData.loss}</p>\r\n//           <p><strong>Sell Status:</strong> {pnlData.sellStatus}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PnLReport;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const PnLReport = () => {\r\n//   const navigate = useNavigate();\r\n//   const [orderId, setOrderId] = useState('');\r\n//   const [pnlData, setPnlData] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [showPopup, setShowPopup] = useState(false); // Popup state\r\n\r\n//   const fetchPnLReport = async () => {\r\n//     if (!orderId.trim()) {\r\n//       setError(\"Order ID is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setShowPopup(false); // Hide popup initially\r\n\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:5000/api/pnl_report?orderId=${orderId}`);\r\n//       setPnlData(response.data);\r\n\r\n//       // Show popup message\r\n//       setShowPopup(true);\r\n//       setTimeout(() => setShowPopup(false), 3000); // Hide after 3 seconds\r\n\r\n//       setOrderId(''); // Clear input field\r\n//     } catch (err) {\r\n//       setError(\"Error fetching data from the backend.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-md mx-auto\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Binance Order PnL Report</h1>\r\n      \r\n//       <input \r\n//         type=\"text\"\r\n//         placeholder=\"Enter Order ID\"\r\n//         value={orderId}\r\n//         onChange={(e) => setOrderId(e.target.value)}\r\n//         className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\r\n//       />\r\n\r\n//       <button \r\n//         onClick={fetchPnLReport} \r\n//         disabled={loading}\r\n//         className=\"w-full p-2 mt-3 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\"\r\n//       >\r\n//         {loading ? 'Loading...' : 'Get PnL Report'}\r\n//       </button>\r\n\r\n//       <button\r\n//         onClick={() => navigate(\"/\")}\r\n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\r\n//       >\r\n//         Back to Dashboard\r\n//       </button>\r\n\r\n//       {error && <div className=\"mt-4 p-2 bg-red-600 text-white rounded\">{error}</div>}\r\n\r\n//       {/* Popup Message */}\r\n//       {showPopup && (\r\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\r\n//           PnL Report Fetched Successfully!\r\n//         </div>\r\n//       )}\r\n\r\n//       {pnlData && (\r\n//         <div className=\"mt-4 p-4 bg-gray-700 rounded-lg\">\r\n//           <h2 className=\"text-xl font-bold\">Order PnL Details</h2>\r\n//           <p><strong>Order ID:</strong> {pnlData.orderId}</p>\r\n//           <p><strong>Symbol:</strong> {pnlData.symbol}</p>\r\n//           <p><strong>Buy Price:</strong> {pnlData.buyPrice}</p>\r\n//           <p><strong>Current Price:</strong> {pnlData.currentPrice}</p>\r\n//           <p><strong>Quantity:</strong> {pnlData.quantity}</p>\r\n//           <p><strong>Realized PnL:</strong> {pnlData.realizedPnL}</p>\r\n//           <p><strong>Unrealized PnL:</strong> {pnlData.unrealizedPnL}</p>\r\n//           <p><strong>PnL Percentage:</strong> {pnlData.pnlPercentage}%</p>\r\n//           <p><strong>Profit:</strong> {pnlData.profit}</p>\r\n//           <p><strong>Loss:</strong> {pnlData.loss}</p>\r\n//           <p><strong>Sell Status:</strong> {pnlData.sellStatus}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PnLReport;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PnLReport = () => {\r\n  const navigate = useNavigate();\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [pnlData, setPnlData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [showPopup, setShowPopup] = useState(false); // Popup state\r\n\r\n  const fetchPnLReport = async () => {\r\n    if (!orderId.trim()) {\r\n      setError(\"Order ID is required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setShowPopup(false); // Hide popup initially\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/pnl_report?orderId=${orderId}`\r\n      );\r\n      setPnlData(response.data);\r\n\r\n      // Show popup message\r\n      setShowPopup(true);\r\n      setTimeout(() => setShowPopup(false), 3000); // Hide after 3 seconds\r\n\r\n      setOrderId(\"\"); // Clear input field\r\n    } catch (err) {\r\n      setError(\"Error fetching data from the backend.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-4xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4 text-center\">\r\n        Binance Order PnL Report\r\n      </h1>\r\n\r\n      <div className=\"flex space-x-2\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Order ID\"\r\n          value={orderId}\r\n          onChange={(e) => setOrderId(e.target.value)}\r\n          className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\r\n        />\r\n        <button\r\n          onClick={fetchPnLReport}\r\n          disabled={loading}\r\n          className=\"p-2 bg-yellow-500 text-black font-bold rounded hover:bg-yellow-600\"\r\n        >\r\n          {loading ? \"Loading...\" : \"Get PnL Report\"}\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => navigate(\"/\")}\r\n        className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\r\n      >\r\n        Back to Dashboard\r\n      </button>\r\n\r\n      {error && (\r\n        <div className=\"mt-4 p-2 bg-red-600 text-white rounded\">{error}</div>\r\n      )}\r\n\r\n      {/* Popup Message */}\r\n      {showPopup && (\r\n        <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\r\n          PnL Report Fetched Successfully!\r\n        </div>\r\n      )}\r\n\r\n      {/* Table View */}\r\n      {pnlData && (\r\n        <div className=\"mt-6 overflow-x-auto\">\r\n          <table className=\"w-full text-left border-collapse border border-gray-600\">\r\n            <thead>\r\n              <tr className=\"bg-gray-700 text-yellow-400\">\r\n                <th className=\"border border-gray-600 p-2\">Order ID</th>\r\n                <th className=\"border border-gray-600 p-2\">Symbol</th>\r\n                <th className=\"border border-gray-600 p-2\">Buy Price</th>\r\n                <th className=\"border border-gray-600 p-2\">Current Price</th>\r\n                <th className=\"border border-gray-600 p-2\">Quantity</th>\r\n                <th className=\"border border-gray-600 p-2\">Realized PnL</th>\r\n                <th className=\"border border-gray-600 p-2\">Unrealized PnL</th>\r\n                <th className=\"border border-gray-600 p-2\">PnL %</th>\r\n                <th className=\"border border-gray-600 p-2\">Profit</th>\r\n                <th className=\"border border-gray-600 p-2\">Loss</th>\r\n                <th className=\"border border-gray-600 p-2\">Sell Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr className=\"bg-gray-800 text-white\">\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.orderId}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.symbol}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.buyPrice}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.currentPrice}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.quantity}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.realizedPnL}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.unrealizedPnL}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.pnlPercentage}%</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.profit}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.loss}</td>\r\n                <td className=\"border border-gray-600 p-2\">{pnlData.sellStatus}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PnLReport;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/components/PlaceOrder.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceOrder = () => {\n  _s();\n  const navigate = useNavigate();\n  const [security_id, setSecurityId] = useState(\"\");\n  const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n  const [side, setSide] = useState(\"BUY\");\n  const [orderType, setOrderType] = useState(\"LIMIT\");\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(\"\");\n  const [triggerPrice, setTriggerPrice] = useState(\"\");\n  const [productType, setProductType] = useState(\"INTRADAY\");\n  const [timeInForce, setTimeInForce] = useState(\"GTC\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Function to fetch search results\n  // const handleSearch = async () => {\n  //   setError(null);\n  //   setSearchResults([]);\n\n  //   if (!searchQuery.trim()) {\n  //     setError(\"Please enter a search term.\");\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.get(`http://localhost:5000/api/search?query=${searchQuery}`);\n  //     console.log(\"---------\",response.data)\n  //     if (response.data.length > 0) {\n  //       console.log(\"Search Results:-----------\", response.data);\n  //       setSearchResults(response.data);\n\n  //     } else {\n  //       setError(\"No matching data found.\");\n  //     }\n  //   } catch (err) {\n  //     setError(\"Error fetching search results. Please try again.\");\n  //     console.error(\"Search Error:\", err);\n  //   }\n  // };\n\n  const handleSearch = async () => {\n    setError(null);\n    setSearchResults([]); // Clear previous results\n\n    if (!searchQuery.trim()) {\n      setError(\"Please enter a search term.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/api/search?query=${searchQuery}`);\n      console.log(\"Search Results:\", response.data);\n      if (response.data.length > 0) {\n        setSearchResults(response.data);\n      } else {\n        setSearchResults([]); // Ensure empty results are reflected in UI\n        setError(\"No matching data found.\");\n      }\n    } catch (err) {\n      setSearchResults([]); // Ensure searchResults is always updated\n      setError(\"Error fetching search results. Please try again.\");\n      console.error(\"Search Error:\", err);\n    }\n  };\n  const handlePlaceOrder = async () => {\n    setError(null);\n    setSuccessMessage(null);\n    if (quantity <= 0) {\n      setError(\"Quantity must be greater than 0.\");\n      return;\n    }\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n      setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n      return;\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n      setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n      return;\n    }\n    setLoading(true);\n\n    // Construct the order payload dynamically\n    let orderData = {\n      security_id,\n      exchange_segment,\n      transaction_type: side,\n      quantity,\n      order_type: orderType,\n      product_type: productType\n    };\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n      orderData.price = parseFloat(price);\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n      orderData.trigger_price = parseFloat(triggerPrice);\n    }\n    if (orderType === \"LIMIT\") {\n      orderData.timeInForce = timeInForce;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Order Response:\", response.data, response.data.saved_data);\n      setOrders(prevOrders => [...prevOrders, response.data]);\n\n      // if (response.data.status === \"offline\") {\n      //   setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n      // } else if (response.data.status === \"success\") {\n      //   setSuccessMessage(\"Order placed successfully.\");\n      // } else {\n      //   setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n      // }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$re;\n      setError(`Error placing order: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$re = _err$response$data.remarks) === null || _err$response$data$re === void 0 ? void 0 : _err$response$data$re.error_message) || err.message}`);\n      console.error(\"Order Error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-0\",\n          children: \"Search by security_id, Symbol_Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          className: \"ml-1 p-1 bg-green-500 text-black font-bold rounded hover:bg-green-500\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border-collapse border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-700 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Exchange Segment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Security ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Instrument Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Lot Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Symbol Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-800 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 px-4 py-2\",\n                children: (result === null || result === void 0 ? void 0 : result.Exchange_segment) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 px-4 py-2\",\n                children: (result === null || result === void 0 ? void 0 : result.Security_ID) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 px-4 py-2\",\n                children: (result === null || result === void 0 ? void 0 : result.Instrument_Type) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 px-4 py-2\",\n                children: (result === null || result === void 0 ? void 0 : result.Lot_Size) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 px-4 py-2\",\n                children: (result === null || result === void 0 ? void 0 : result.Symbol_Name) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Security ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Security ID\",\n          value: security_id,\n          onChange: e => setSecurityId(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Exchange Segment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: exchange_segment,\n          onChange: e => setExchangeSegment(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"NSE_EQ\",\n            children: \"NSE_EQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BSE_EQ\",\n            children: \"BSE_EQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BSE_EQ\",\n            children: \"MCX_EQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BSE_EQ\",\n            children: \"BSE_EQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: side,\n          onChange: e => setSide(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BUY\",\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SELL\",\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Order Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: orderType,\n          onChange: e => setOrderType(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LIMIT\",\n            children: \"LIMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MARKET\",\n            children: \"MARKET\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"STOP_LOSS\",\n            children: \"STOP-LOSS (SL)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"STOP_LOSS_MARKET\",\n            children: \"STOP-LOSS MARKET (SL-M)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), orderType !== \"MARKET\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this), [\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Trigger Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: triggerPrice,\n          onChange: e => setTriggerPrice(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => setQuantity(parseFloat(e.target.value) || 1),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlaceOrder,\n      disabled: loading,\n      className: \"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\",\n      children: loading ? \"Placing Order...\" : \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      className: \"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-red-400 text-black rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 17\n    }, this), orders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border-collapse border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-700 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Order ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Security id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Side\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Order Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Product Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map((order, index) => {\n              var _order$saved_data, _order$saved_data$, _order$saved_data2, _order$saved_data2$, _order$saved_data3, _order$saved_data3$, _order$saved_data4, _order$saved_data4$, _order$saved_data5, _order$saved_data5$, _order$saved_data6, _order$saved_data6$, _order$saved_data7, _order$saved_data7$;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-gray-800 text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : order.test_order_id) || (order === null || order === void 0 ? void 0 : order.order_id) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data = order.saved_data) === null || _order$saved_data === void 0 ? void 0 : (_order$saved_data$ = _order$saved_data[0]) === null || _order$saved_data$ === void 0 ? void 0 : _order$saved_data$.security_id) || (order === null || order === void 0 ? void 0 : order.symbol) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data2 = order.saved_data) === null || _order$saved_data2 === void 0 ? void 0 : (_order$saved_data2$ = _order$saved_data2[0]) === null || _order$saved_data2$ === void 0 ? void 0 : _order$saved_data2$.transaction_type) || (order === null || order === void 0 ? void 0 : order.side) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data3 = order.saved_data) === null || _order$saved_data3 === void 0 ? void 0 : (_order$saved_data3$ = _order$saved_data3[0]) === null || _order$saved_data3$ === void 0 ? void 0 : _order$saved_data3$.order_type) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data4 = order.saved_data) === null || _order$saved_data4 === void 0 ? void 0 : (_order$saved_data4$ = _order$saved_data4[0]) === null || _order$saved_data4$ === void 0 ? void 0 : _order$saved_data4$.quantity) || (order === null || order === void 0 ? void 0 : order.origQty) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 820,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data5 = order.saved_data) === null || _order$saved_data5 === void 0 ? void 0 : (_order$saved_data5$ = _order$saved_data5[0]) === null || _order$saved_data5$ === void 0 ? void 0 : _order$saved_data5$.price) > 0 ? order === null || order === void 0 ? void 0 : (_order$saved_data6 = order.saved_data) === null || _order$saved_data6 === void 0 ? void 0 : (_order$saved_data6$ = _order$saved_data6[0]) === null || _order$saved_data6$ === void 0 ? void 0 : _order$saved_data6$.price : \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : (_order$saved_data7 = order.saved_data) === null || _order$saved_data7 === void 0 ? void 0 : (_order$saved_data7$ = _order$saved_data7[0]) === null || _order$saved_data7$ === void 0 ? void 0 : _order$saved_data7$.product_type) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-600 p-2\",\n                  children: (order === null || order === void 0 ? void 0 : order.status) || \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-green-600 text-white rounded\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 26\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\",\n      children: \"Order created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 649,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceOrder, \"cdFUDJw+XB97q1fo4MVzU1AWAAA=\", false, function () {\n  return [useNavigate];\n});\n_c = PlaceOrder;\nexport default PlaceOrder;\nvar _c;\n$RefreshReg$(_c, \"PlaceOrder\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","PlaceOrder","_s","navigate","security_id","setSecurityId","exchange_segment","setExchangeSegment","side","setSide","orderType","setOrderType","quantity","setQuantity","price","setPrice","triggerPrice","setTriggerPrice","productType","setProductType","timeInForce","setTimeInForce","error","setError","loading","setLoading","successMessage","setSuccessMessage","orders","setOrders","showPopup","setShowPopup","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearch","trim","response","get","console","log","data","length","err","handlePlaceOrder","includes","orderData","transaction_type","order_type","product_type","parseFloat","trigger_price","post","headers","saved_data","prevOrders","_err$response","_err$response$data","_err$response$data$re","remarks","error_message","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","result","index","Exchange_segment","Security_ID","Instrument_Type","Lot_Size","Symbol_Name","disabled","order","_order$saved_data","_order$saved_data$","_order$saved_data2","_order$saved_data2$","_order$saved_data3","_order$saved_data3$","_order$saved_data4","_order$saved_data4$","_order$saved_data5","_order$saved_data5$","_order$saved_data6","_order$saved_data6$","_order$saved_data7","_order$saved_data7$","test_order_id","order_id","symbol","origQty","status","_c","$RefreshReg$"],"sources":["/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/components/PlaceOrder.js"],"sourcesContent":["\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PlaceOrder = () => {\n  const navigate = useNavigate();\n  const [security_id, setSecurityId] = useState(\"\");\n  const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n  const [side, setSide] = useState(\"BUY\");\n  const [orderType, setOrderType] = useState(\"LIMIT\");\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(\"\");\n  const [triggerPrice, setTriggerPrice] = useState(\"\");\n  const [productType, setProductType] = useState(\"INTRADAY\");\n  const [timeInForce, setTimeInForce] = useState(\"GTC\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n\n\n\n  // Function to fetch search results\n  // const handleSearch = async () => {\n  //   setError(null);\n  //   setSearchResults([]);\n\n  //   if (!searchQuery.trim()) {\n  //     setError(\"Please enter a search term.\");\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.get(`http://localhost:5000/api/search?query=${searchQuery}`);\n  //     console.log(\"---------\",response.data)\n  //     if (response.data.length > 0) {\n  //       console.log(\"Search Results:-----------\", response.data);\n  //       setSearchResults(response.data);\n        \n  //     } else {\n  //       setError(\"No matching data found.\");\n  //     }\n  //   } catch (err) {\n  //     setError(\"Error fetching search results. Please try again.\");\n  //     console.error(\"Search Error:\", err);\n  //   }\n  // };\n\n  const handleSearch = async () => {\n    setError(null);\n    setSearchResults([]); // Clear previous results\n  \n    if (!searchQuery.trim()) {\n      setError(\"Please enter a search term.\");\n      return;\n    }\n  \n    try {\n      const response = await axios.get(`http://localhost:5000/api/search?query=${searchQuery}`);\n  \n      console.log(\"Search Results:\", response.data);\n  \n      if (response.data.length > 0) {\n        setSearchResults(response.data);\n      } else {\n        setSearchResults([]); // Ensure empty results are reflected in UI\n        setError(\"No matching data found.\");\n      }\n    } catch (err) {\n      setSearchResults([]); // Ensure searchResults is always updated\n      setError(\"Error fetching search results. Please try again.\");\n      console.error(\"Search Error:\", err);\n    }\n  };\n  \n\n  const handlePlaceOrder = async () => {\n    setError(null);\n    setSuccessMessage(null);\n\n    if (quantity <= 0) {\n      setError(\"Quantity must be greater than 0.\");\n      return;\n    }\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n      setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n      return;\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n      setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n      return;\n    }\n\n    setLoading(true);\n\n    // Construct the order payload dynamically\n    let orderData = {\n      security_id,\n      exchange_segment,\n      transaction_type: side,\n      quantity,\n      order_type: orderType,\n      product_type: productType,\n    };\n\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n      orderData.price = parseFloat(price);\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n      orderData.trigger_price = parseFloat(triggerPrice);\n    }\n    if (orderType === \"LIMIT\") {\n      orderData.timeInForce = timeInForce;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      console.log(\"Order Response:\", response.data, response.data.saved_data);\n      setOrders((prevOrders) => [...prevOrders, response.data]);\n\n      // if (response.data.status === \"offline\") {\n      //   setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n      // } else if (response.data.status === \"success\") {\n      //   setSuccessMessage(\"Order placed successfully.\");\n      // } else {\n      //   setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n      // }\n    } catch (err) {\n      setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n      console.error(\"Order Error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n        <div className=\"grid grid-cols-1 gap-2\">\n          {/* Search Bar */}\n        <div className=\"mb-4 flex\">\n        <label className=\"block mb-0\">Search by security_id, Symbol_Name:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          />\n          <button\n            onClick={handleSearch}\n            className=\"ml-1 p-1 bg-green-500 text-black font-bold rounded hover:bg-green-500\"\n          >\n            Search\n          </button>\n        </div>\n\n        {/* Display Search Results */\n          }\n\n        {searchResults.length > 0 && (\n          <div className=\"mt-4\">\n            <h3 className=\"text-xl font-bold mb-2\">Search Results</h3>\n            <table className=\"w-full border-collapse border border-gray-600\">\n              <thead>\n                <tr className=\"bg-gray-700 text-white\">\n                  <th className=\"border border-gray-600 p-2\">Exchange Segment</th>\n                  <th className=\"border border-gray-600 p-2\">Security ID</th>\n                  <th className=\"border border-gray-600 p-2\">Instrument Type</th>\n                  <th className=\"border border-gray-600 p-2\">Lot Size</th>\n                  <th className=\"border border-gray-600 p-2\">Symbol Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {searchResults.map((result, index) => (\n                  <tr key={index} className=\"bg-gray-800 text-white\">\n                    <td className=\"border border-gray-600 px-4 py-2\">{result?.Exchange_segment || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 px-4 py-2\">{result?.Security_ID || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 px-4 py-2\">{result?.Instrument_Type || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 px-4 py-2\">{result?.Lot_Size || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 px-4 py-2\">{result?.Symbol_Name || \"N/A\"}</td>\n                        </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n        <div>\n          <label className=\"block mb-1\">Security ID:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Security ID\"\n            value={security_id}\n            onChange={(e) => setSecurityId(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          />\n        </div>\n        <div>\n          <label className=\"block mb-1\">Exchange Segment:</label>\n          <select\n            value={exchange_segment}\n            onChange={(e) => setExchangeSegment(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          >\n            <option value=\"NSE_EQ\">NSE_EQ</option>\n            <option value=\"BSE_EQ\">BSE_EQ</option>\n            <option value=\"BSE_EQ\">MCX_EQ</option>\n            <option value=\"BSE_EQ\">BSE_EQ</option>\n          </select>\n        </div>\n        <div>\n          <label className=\"block mb-1\">Transaction Type:</label>\n          <select\n            value={side}\n            onChange={(e) => setSide(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          >\n            <option value=\"BUY\">BUY</option>\n            <option value=\"SELL\">SELL</option>\n          </select>\n        </div>\n        <div>\n          <label className=\"block mb-1\">Order Type:</label>\n          <select\n            value={orderType}\n            onChange={(e) => setOrderType(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          >\n            <option value=\"LIMIT\">LIMIT</option>\n            <option value=\"MARKET\">MARKET</option>\n            <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n            <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n          </select>\n        </div>\n        {orderType !== \"MARKET\" && (\n          <div>\n            <label className=\"block mb-1\">Price:</label>\n            <input\n              type=\"number\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n              className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n            />\n          </div>\n        )}\n        {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n          <div>\n            <label className=\"block mb-1\">Trigger Price:</label>\n            <input\n              type=\"number\"\n              value={triggerPrice}\n              onChange={(e) => setTriggerPrice(e.target.value)}\n              className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n            />\n          </div>\n        )}\n        <div>\n          <label className=\"block mb-1\">Quantity:</label>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          />\n        </div>\n      </div>\n      <button\n        onClick={handlePlaceOrder}\n        disabled={loading}\n        className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n      >\n        {loading ? \"Placing Order...\" : \"Place Order\"}\n      </button>\n      <button\n        onClick={() => navigate(\"/\")}        \n        className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n      >\n        Back to Dashboard\n       </button>\n\n      {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n      {/* Order Table */\n      }\n      {orders.length > 0 && (\n        <div className=\"mt-6\">\n          <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse border border-gray-600\">\n              <thead>\n                <tr className=\"bg-gray-700 text-white\">\n                  <th className=\"border border-gray-600 p-2\">Order ID</th>\n                  <th className=\"border border-gray-600 p-2\">Security id</th>\n                  <th className=\"border border-gray-600 p-2\">Side</th>\n                  <th className=\"border border-gray-600 p-2\">Order Type</th>\n                  <th className=\"border border-gray-600 p-2\">Quantity</th>\n                  <th className=\"border border-gray-600 p-2\">Price</th>\n                  <th className=\"border border-gray-600 p-2\">Product Type</th>\n                  <th className=\"border border-gray-600 p-2\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order, index) => (\n                  <tr key={index} className=\"bg-gray-800 text-white\">\n                  <td className=\"border border-gray-600 p-2\">{order?.test_order_id || order?.order_id || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.security_id || order?.symbol || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.transaction_type || order?.side || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.order_type || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.quantity || order?.origQty || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.price > 0 ? order?.saved_data?.[0]?.price : \"-\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.saved_data?.[0]?.product_type || \"N/A\"}</td>\n                  <td className=\"border border-gray-600 p-2\">{order?.status || \"Pending\"}</td>\n\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n      {showPopup && (\n        <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n          Order created successfully!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA8BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAaA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
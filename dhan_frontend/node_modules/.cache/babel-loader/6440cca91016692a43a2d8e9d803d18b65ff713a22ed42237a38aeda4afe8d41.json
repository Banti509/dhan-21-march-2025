{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/components/PlaceOrder.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import { useNavigate } from \"react-router-dom\";\n\n// // const PlaceOrder = () => {\n// //   const navigate = useNavigate();\n// //   const [security_id, setSecurityId] = useState(\"12345\");\n// //   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n// //   const [side, setSide] = useState(\"BUY\");\n// //   const [orderType, setOrderType] = useState(\"LIMIT\");\n// //   const [quantity, setQuantity] = useState(1);\n// //   const [price, setPrice] = useState(\"\");\n// //   const [triggerPrice, setTriggerPrice] = useState(\"\");\n// //   const [productType, setProductType] = useState(\"INTRADAY\");\n// //   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n// //   const [error, setError] = useState(null);\n// //   const [loading, setLoading] = useState(false);\n// //   const [successMessage, setSuccessMessage] = useState(null);\n// //   const [orders, setOrders] = useState([]);\n// //   const [showPopup, setShowPopup] = useState(false);\n\n// //   const handlePlaceOrder = async () => {\n// //     setError(null);\n// //     setSuccessMessage(null);\n\n// //     if (quantity <= 0) {\n// //       setError(\"Quantity must be greater than 0.\");\n// //       return;\n// //     }\n// //     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n// //       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n// //       return;\n// //     }\n// //     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n// //       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n// //       return;\n// //     }\n\n// //     setLoading(true);\n\n// //     // Construct the order payload dynamically\n// //     let orderData = {\n// //       security_id,\n// //       exchange_segment,\n// //       transaction_type: side,\n// //       quantity,\n// //       order_type: orderType,\n// //       product_type: productType,\n// //     };\n\n// //     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n// //       orderData.price = parseFloat(price);\n// //     }\n// //     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n// //       orderData.trigger_price = parseFloat(triggerPrice);\n// //     }\n// //     if (orderType === \"LIMIT\") {\n// //       orderData.timeInForce = timeInForce;\n// //     }\n\n// //     try {\n// //       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       console.log(\"Order Response:\", response.data);\n// //       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n// //       if (response.data.status === \"offline\") {\n// //         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n// //       } else if (response.data.status === \"success\") {\n// //         setSuccessMessage(\"Order placed successfully.\");\n// //       } else {\n// //         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n// //       }\n// //     } catch (err) {\n// //       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n// //       console.error(\"Order Error:\", err);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n// //       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n// //       <div className=\"grid grid-cols-2 gap-4\">\n// //         <div>\n// //           <label className=\"block mb-1\">Security ID:</label>\n// //           <input\n// //             type=\"text\"\n// //             value={security_id}\n// //             onChange={(e) => setSecurityId(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           />\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Exchange Segment:</label>\n// //           <select\n// //             value={exchange_segment}\n// //             onChange={(e) => setExchangeSegment(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"NSE_EQ\">NSE_EQ</option>\n// //             <option value=\"BSE_EQ\">BSE_EQ</option>\n// //             <option value=\"BSE_EQ\">MCX_EQ</option>\n// //             <option value=\"BSE_EQ\">BSE_EQ</option>\n// //           </select>\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Transaction Type:</label>\n// //           <select\n// //             value={side}\n// //             onChange={(e) => setSide(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"BUY\">BUY</option>\n// //             <option value=\"SELL\">SELL</option>\n// //           </select>\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Order Type:</label>\n// //           <select\n// //             value={orderType}\n// //             onChange={(e) => setOrderType(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"LIMIT\">LIMIT</option>\n// //             <option value=\"MARKET\">MARKET</option>\n// //             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n// //             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n// //           </select>\n// //         </div>\n// //         {orderType !== \"MARKET\" && (\n// //           <div>\n// //             <label className=\"block mb-1\">Price:</label>\n// //             <input\n// //               type=\"number\"\n// //               value={price}\n// //               onChange={(e) => setPrice(e.target.value)}\n// //               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //             />\n// //           </div>\n// //         )}\n// //         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n// //           <div>\n// //             <label className=\"block mb-1\">Trigger Price:</label>\n// //             <input\n// //               type=\"number\"\n// //               value={triggerPrice}\n// //               onChange={(e) => setTriggerPrice(e.target.value)}\n// //               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //             />\n// //           </div>\n// //         )}\n// //         <div>\n// //           <label className=\"block mb-1\">Quantity:</label>\n// //           <input\n// //             type=\"number\"\n// //             value={quantity}\n// //             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           />\n// //         </div>\n// //       </div>\n// //       <button\n// //         onClick={handlePlaceOrder}\n// //         disabled={loading}\n// //         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n// //       >\n// //         {loading ? \"Placing Order...\" : \"Place Order\"}\n// //       </button>\n// //       <button\n// //         onClick={() => navigate(\"/\")}        \n// //         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n// //       >\n// //         Back to Dashboard\n// //        </button>\n\n// //       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n// //       {/* Order Table */}\n// //       {orders.length > 0 && (\n// //         <div className=\"mt-6\">\n// //           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n// //           <div className=\"overflow-x-auto\">\n// //             <table className=\"w-full border-collapse border border-gray-600\">\n// //               <thead>\n// //                 <tr className=\"bg-gray-700 text-white\">\n// //                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n// //                   <th className=\"border border-gray-600 p-2\">Security id</th>\n// //                   <th className=\"border border-gray-600 p-2\">Side</th>\n// //                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n// //                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n// //                   <th className=\"border border-gray-600 p-2\">Price</th>\n// //                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n// //                   <th className=\"border border-gray-600 p-2\">Status</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {orders.map((order, index) => (\n// //                   <tr key={index} className=\"bg-gray-800 text-white\">\n// //                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //           </div>\n// //         </div>\n// //       )}\n// //       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n// //       {showPopup && (\n// //         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n// //           Order created successfully!\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default PlaceOrder;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceOrder = () => {\n  _s();\n  const navigate = useNavigate();\n  const [security_id, setSecurityId] = useState(\"12345\");\n  const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n  const [side, setSide] = useState(\"BUY\");\n  const [orderType, setOrderType] = useState(\"LIMIT\");\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(\"\");\n  const [triggerPrice, setTriggerPrice] = useState(\"\");\n  const [productType, setProductType] = useState(\"INTRADAY\");\n  const [timeInForce, setTimeInForce] = useState(\"GTC\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const handlePlaceOrder = async () => {\n    setError(null);\n    setSuccessMessage(null);\n    if (quantity <= 0) {\n      setError(\"Quantity must be greater than 0.\");\n      return;\n    }\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n      setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n      return;\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n      setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n      return;\n    }\n    setLoading(true);\n    let orderData = {\n      security_id,\n      exchange_segment,\n      transaction_type: side,\n      quantity,\n      order_type: orderType,\n      product_type: productType\n    };\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n      orderData.price = parseFloat(price);\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n      orderData.trigger_price = parseFloat(triggerPrice);\n    }\n    if (orderType === \"LIMIT\") {\n      orderData.timeInForce = timeInForce;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Order Response:\", response.data);\n      setOrders(prevOrders => [...prevOrders, response.data]);\n      if (response.data.status === \"offline\") {\n        setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n      } else if (response.data.status === \"success\") {\n        setSuccessMessage(\"Order placed successfully.\");\n      } else {\n        var _response$data, _response$data$remark;\n        setError(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$remark = _response$data.remarks) === null || _response$data$remark === void 0 ? void 0 : _response$data$remark.error_message) || \"Failed to place order. Please try again.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$re;\n      setError(`Error placing order: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$re = _err$response$data.remarks) === null || _err$response$data$re === void 0 ? void 0 : _err$response$data$re.error_message) || err.message}`);\n      console.error(\"Order Error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter orders based on search query\n  const filteredOrders = orders.filter(order => {\n    var _order$security_id;\n    return (_order$security_id = order.security_id) === null || _order$security_id === void 0 ? void 0 : _order$security_id.toString().toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Security ID...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"p-2 rounded bg-gray-700 border border-gray-600 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSearchQuery(searchQuery),\n        className: \"p-2 ml-2 bg-blue-500 text-black font-bold rounded hover:bg-blue-600\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Security ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: security_id,\n          onChange: e => setSecurityId(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlaceOrder,\n      disabled: loading,\n      className: \"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\",\n      children: loading ? \"Placing Order...\" : \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      className: \"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-red-400 text-black rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 17\n    }, this), filteredOrders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border-collapse border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-700 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Order ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Security ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Side\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Order Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Product Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-600 p-2\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-800 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.orderId || order.id || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.security_id || order.symbol || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.transaction_type || order.side || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.order_type || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.quantity || order.origQty || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.price > 0 ? order.price : \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.product_type || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-600 p-2\",\n                children: order.status || \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-green-600 text-white rounded\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 592,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceOrder, \"t5Sk/mxtWnp2/+KowzQlTN+fts8=\", false, function () {\n  return [useNavigate];\n});\n_c = PlaceOrder;\nexport default PlaceOrder;\nvar _c;\n$RefreshReg$(_c, \"PlaceOrder\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","PlaceOrder","_s","navigate","security_id","setSecurityId","exchange_segment","setExchangeSegment","side","setSide","orderType","setOrderType","quantity","setQuantity","price","setPrice","triggerPrice","setTriggerPrice","productType","setProductType","timeInForce","setTimeInForce","error","setError","loading","setLoading","successMessage","setSuccessMessage","orders","setOrders","searchQuery","setSearchQuery","handlePlaceOrder","includes","orderData","transaction_type","order_type","product_type","parseFloat","trigger_price","response","post","headers","console","log","data","prevOrders","status","_response$data","_response$data$remark","remarks","error_message","err","_err$response","_err$response$data","_err$response$data$re","message","filteredOrders","filter","order","_order$security_id","toString","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","length","map","index","orderId","id","symbol","origQty","_c","$RefreshReg$"],"sources":["/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/components/PlaceOrder.js"],"sourcesContent":["\n\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import { useNavigate } from \"react-router-dom\";\n\n// // const PlaceOrder = () => {\n// //   const navigate = useNavigate();\n// //   const [security_id, setSecurityId] = useState(\"12345\");\n// //   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n// //   const [side, setSide] = useState(\"BUY\");\n// //   const [orderType, setOrderType] = useState(\"LIMIT\");\n// //   const [quantity, setQuantity] = useState(1);\n// //   const [price, setPrice] = useState(\"\");\n// //   const [triggerPrice, setTriggerPrice] = useState(\"\");\n// //   const [productType, setProductType] = useState(\"INTRADAY\");\n// //   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n// //   const [error, setError] = useState(null);\n// //   const [loading, setLoading] = useState(false);\n// //   const [successMessage, setSuccessMessage] = useState(null);\n// //   const [orders, setOrders] = useState([]);\n// //   const [showPopup, setShowPopup] = useState(false);\n\n\n// //   const handlePlaceOrder = async () => {\n// //     setError(null);\n// //     setSuccessMessage(null);\n\n// //     if (quantity <= 0) {\n// //       setError(\"Quantity must be greater than 0.\");\n// //       return;\n// //     }\n// //     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n// //       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n// //       return;\n// //     }\n// //     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n// //       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n// //       return;\n// //     }\n\n// //     setLoading(true);\n\n// //     // Construct the order payload dynamically\n// //     let orderData = {\n// //       security_id,\n// //       exchange_segment,\n// //       transaction_type: side,\n// //       quantity,\n// //       order_type: orderType,\n// //       product_type: productType,\n// //     };\n\n// //     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n// //       orderData.price = parseFloat(price);\n// //     }\n// //     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n// //       orderData.trigger_price = parseFloat(triggerPrice);\n// //     }\n// //     if (orderType === \"LIMIT\") {\n// //       orderData.timeInForce = timeInForce;\n// //     }\n\n// //     try {\n// //       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       console.log(\"Order Response:\", response.data);\n// //       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n// //       if (response.data.status === \"offline\") {\n// //         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n// //       } else if (response.data.status === \"success\") {\n// //         setSuccessMessage(\"Order placed successfully.\");\n// //       } else {\n// //         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n// //       }\n// //     } catch (err) {\n// //       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n// //       console.error(\"Order Error:\", err);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n// //       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n// //       <div className=\"grid grid-cols-2 gap-4\">\n// //         <div>\n// //           <label className=\"block mb-1\">Security ID:</label>\n// //           <input\n// //             type=\"text\"\n// //             value={security_id}\n// //             onChange={(e) => setSecurityId(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           />\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Exchange Segment:</label>\n// //           <select\n// //             value={exchange_segment}\n// //             onChange={(e) => setExchangeSegment(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"NSE_EQ\">NSE_EQ</option>\n// //             <option value=\"BSE_EQ\">BSE_EQ</option>\n// //             <option value=\"BSE_EQ\">MCX_EQ</option>\n// //             <option value=\"BSE_EQ\">BSE_EQ</option>\n// //           </select>\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Transaction Type:</label>\n// //           <select\n// //             value={side}\n// //             onChange={(e) => setSide(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"BUY\">BUY</option>\n// //             <option value=\"SELL\">SELL</option>\n// //           </select>\n// //         </div>\n// //         <div>\n// //           <label className=\"block mb-1\">Order Type:</label>\n// //           <select\n// //             value={orderType}\n// //             onChange={(e) => setOrderType(e.target.value)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           >\n// //             <option value=\"LIMIT\">LIMIT</option>\n// //             <option value=\"MARKET\">MARKET</option>\n// //             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n// //             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n// //           </select>\n// //         </div>\n// //         {orderType !== \"MARKET\" && (\n// //           <div>\n// //             <label className=\"block mb-1\">Price:</label>\n// //             <input\n// //               type=\"number\"\n// //               value={price}\n// //               onChange={(e) => setPrice(e.target.value)}\n// //               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //             />\n// //           </div>\n// //         )}\n// //         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n// //           <div>\n// //             <label className=\"block mb-1\">Trigger Price:</label>\n// //             <input\n// //               type=\"number\"\n// //               value={triggerPrice}\n// //               onChange={(e) => setTriggerPrice(e.target.value)}\n// //               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //             />\n// //           </div>\n// //         )}\n// //         <div>\n// //           <label className=\"block mb-1\">Quantity:</label>\n// //           <input\n// //             type=\"number\"\n// //             value={quantity}\n// //             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n// //             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n// //           />\n// //         </div>\n// //       </div>\n// //       <button\n// //         onClick={handlePlaceOrder}\n// //         disabled={loading}\n// //         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n// //       >\n// //         {loading ? \"Placing Order...\" : \"Place Order\"}\n// //       </button>\n// //       <button\n// //         onClick={() => navigate(\"/\")}        \n// //         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n// //       >\n// //         Back to Dashboard\n// //        </button>\n\n// //       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n// //       {/* Order Table */}\n// //       {orders.length > 0 && (\n// //         <div className=\"mt-6\">\n// //           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n// //           <div className=\"overflow-x-auto\">\n// //             <table className=\"w-full border-collapse border border-gray-600\">\n// //               <thead>\n// //                 <tr className=\"bg-gray-700 text-white\">\n// //                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n// //                   <th className=\"border border-gray-600 p-2\">Security id</th>\n// //                   <th className=\"border border-gray-600 p-2\">Side</th>\n// //                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n// //                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n// //                   <th className=\"border border-gray-600 p-2\">Price</th>\n// //                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n// //                   <th className=\"border border-gray-600 p-2\">Status</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {orders.map((order, index) => (\n// //                   <tr key={index} className=\"bg-gray-800 text-white\">\n// //                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n// //                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //           </div>\n// //         </div>\n// //       )}\n// //       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n// //       {showPopup && (\n// //         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n// //           Order created successfully!\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PlaceOrder = () => {\n//   const navigate = useNavigate();\n//   const [security_id, setSecurityId] = useState(\"12345\");\n//   const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n//   const [side, setSide] = useState(\"BUY\");\n//   const [orderType, setOrderType] = useState(\"LIMIT\");\n//   const [quantity, setQuantity] = useState(1);\n//   const [price, setPrice] = useState(\"\");\n//   const [triggerPrice, setTriggerPrice] = useState(\"\");\n//   const [productType, setProductType] = useState(\"INTRADAY\");\n//   const [timeInForce, setTimeInForce] = useState(\"GTC\");\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [orders, setOrders] = useState([]);\n//   const [showPopup, setShowPopup] = useState(false);\n\n\n//   const handlePlaceOrder = async () => {\n//     setError(null);\n//     setSuccessMessage(null);\n\n//     if (quantity <= 0) {\n//       setError(\"Quantity must be greater than 0.\");\n//       return;\n//     }\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n//       setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n//       return;\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n//       setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Construct the order payload dynamically\n//     let orderData = {\n//       security_id,\n//       exchange_segment,\n//       transaction_type: side,\n//       quantity,\n//       order_type: orderType,\n//       product_type: productType,\n//     };\n\n//     if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n//       orderData.price = parseFloat(price);\n//     }\n//     if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n//       orderData.trigger_price = parseFloat(triggerPrice);\n//     }\n//     if (orderType === \"LIMIT\") {\n//       orderData.timeInForce = timeInForce;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       console.log(\"Order Response:\", response.data);\n//       setOrders((prevOrders) => [...prevOrders, response.data]);\n\n//       if (response.data.status === \"offline\") {\n//         setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n//       } else if (response.data.status === \"success\") {\n//         setSuccessMessage(\"Order placed successfully.\");\n//       } else {\n//         setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n//       }\n//     } catch (err) {\n//       setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n//       console.error(\"Order Error:\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n//       <div className=\"grid grid-cols-2 gap-4\">\n//         <div>\n//           <label className=\"block mb-1\">Security ID:</label>\n//           <input\n//             type=\"text\"\n//             value={security_id}\n//             onChange={(e) => setSecurityId(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Exchange Segment:</label>\n//           <select\n//             value={exchange_segment}\n//             onChange={(e) => setExchangeSegment(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"NSE_EQ\">NSE_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//             <option value=\"BSE_EQ\">MCX_EQ</option>\n//             <option value=\"BSE_EQ\">BSE_EQ</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Transaction Type:</label>\n//           <select\n//             value={side}\n//             onChange={(e) => setSide(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"BUY\">BUY</option>\n//             <option value=\"SELL\">SELL</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Order Type:</label>\n//           <select\n//             value={orderType}\n//             onChange={(e) => setOrderType(e.target.value)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           >\n//             <option value=\"LIMIT\">LIMIT</option>\n//             <option value=\"MARKET\">MARKET</option>\n//             <option value=\"STOP_LOSS\">STOP-LOSS (SL)</option>\n//             <option value=\"STOP_LOSS_MARKET\">STOP-LOSS MARKET (SL-M)</option>\n//           </select>\n//         </div>\n//         {orderType !== \"MARKET\" && (\n//           <div>\n//             <label className=\"block mb-1\">Price:</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         {[\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && (\n//           <div>\n//             <label className=\"block mb-1\">Trigger Price:</label>\n//             <input\n//               type=\"number\"\n//               value={triggerPrice}\n//               onChange={(e) => setTriggerPrice(e.target.value)}\n//               className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//             />\n//           </div>\n//         )}\n//         <div>\n//           <label className=\"block mb-1\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(parseFloat(e.target.value) || 1)}\n//             className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n//           />\n//         </div>\n//       </div>\n//       <button\n//         onClick={handlePlaceOrder}\n//         disabled={loading}\n//         className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n//       >\n//         {loading ? \"Placing Order...\" : \"Place Order\"}\n//       </button>\n//       <button\n//         onClick={() => navigate(\"/\")}        \n//         className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n//       >\n//         Back to Dashboard\n//        </button>\n\n//       {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n//       {/* Order Table */}\n//       {orders.length > 0 && (\n//         <div className=\"mt-6\">\n//           <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full border-collapse border border-gray-600\">\n//               <thead>\n//                 <tr className=\"bg-gray-700 text-white\">\n//                   <th className=\"border border-gray-600 p-2\">Order ID</th>\n//                   <th className=\"border border-gray-600 p-2\">Security id</th>\n//                   <th className=\"border border-gray-600 p-2\">Side</th>\n//                   <th className=\"border border-gray-600 p-2\">Order Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Quantity</th>\n//                   <th className=\"border border-gray-600 p-2\">Price</th>\n//                   <th className=\"border border-gray-600 p-2\">Product Type</th>\n//                   <th className=\"border border-gray-600 p-2\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {orders.map((order, index) => (\n//                   <tr key={index} className=\"bg-gray-800 text-white\">\n//                   <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n//                   <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       )}\n//       {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n//       {showPopup && (\n//         <div className=\"fixed top-10 right-10 bg-green-500 text-white p-3 rounded-lg shadow-lg\">\n//           Order created successfully!\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PlaceOrder = () => {\n  const navigate = useNavigate();\n  const [security_id, setSecurityId] = useState(\"12345\");\n  const [exchange_segment, setExchangeSegment] = useState(\"NSE_EQ\");\n  const [side, setSide] = useState(\"BUY\");\n  const [orderType, setOrderType] = useState(\"LIMIT\");\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(\"\");\n  const [triggerPrice, setTriggerPrice] = useState(\"\");\n  const [productType, setProductType] = useState(\"INTRADAY\");\n  const [timeInForce, setTimeInForce] = useState(\"GTC\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handlePlaceOrder = async () => {\n    setError(null);\n    setSuccessMessage(null);\n\n    if (quantity <= 0) {\n      setError(\"Quantity must be greater than 0.\");\n      return;\n    }\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType) && price <= 0) {\n      setError(\"Price must be greater than 0 for LIMIT and STOP-LOSS orders.\");\n      return;\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType) && triggerPrice <= 0) {\n      setError(\"Trigger price must be greater than 0 for STOP-LOSS orders.\");\n      return;\n    }\n\n    setLoading(true);\n\n    let orderData = {\n      security_id,\n      exchange_segment,\n      transaction_type: side,\n      quantity,\n      order_type: orderType,\n      product_type: productType,\n    };\n\n    if ([\"LIMIT\", \"STOP_LOSS\"].includes(orderType)) {\n      orderData.price = parseFloat(price);\n    }\n    if ([\"STOP_LOSS\", \"STOP_LOSS_MARKET\"].includes(orderType)) {\n      orderData.trigger_price = parseFloat(triggerPrice);\n    }\n    if (orderType === \"LIMIT\") {\n      orderData.timeInForce = timeInForce;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/place-order\", orderData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      console.log(\"Order Response:\", response.data);\n      setOrders((prevOrders) => [...prevOrders, response.data]);\n\n      if (response.data.status === \"offline\") {\n        setSuccessMessage(\"Market is closed. Order has been saved for later execution.\");\n      } else if (response.data.status === \"success\") {\n        setSuccessMessage(\"Order placed successfully.\");\n      } else {\n        setError(response.data?.remarks?.error_message || \"Failed to place order. Please try again.\");\n      }\n    } catch (err) {\n      setError(`Error placing order: ${err.response?.data?.remarks?.error_message || err.message}`);\n      console.error(\"Order Error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter orders based on search query\n  const filteredOrders = orders.filter(order =>\n    order.security_id?.toString().toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg text-white max-w-3xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-4\">Place Order</h2>\n\n      {/* 🔍 Search Bar */}\n      <div className=\"mb-4 flex items-center\">\n        <input\n          type=\"text\"\n          placeholder=\"Search Security ID...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"p-2 rounded bg-gray-700 border border-gray-600 w-full\"\n        />\n        <button\n          onClick={() => setSearchQuery(searchQuery)} \n          className=\"p-2 ml-2 bg-blue-500 text-black font-bold rounded hover:bg-blue-600\"\n        >\n          Search\n        </button>\n      </div>\n\n      {/* Order Form */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block mb-1\">Security ID:</label>\n          <input\n            type=\"text\"\n            value={security_id}\n            onChange={(e) => setSecurityId(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700 border border-gray-600\"\n          />\n        </div>\n      </div>\n\n      <button\n        onClick={handlePlaceOrder}\n        disabled={loading}\n        className=\"w-full p-2 mt-4 bg-green-500 text-black font-bold rounded hover:bg-green-600\"\n      >\n        {loading ? \"Placing Order...\" : \"Place Order\"}\n      </button>\n\n      <button\n        onClick={() => navigate(\"/\")}        \n        className=\"w-full p-2 mt-3 bg-gray-500 text-white rounded hover:bg-gray-600\"\n      >\n        Back to Dashboard\n      </button>\n\n      {error && <p className=\"mt-4 p-2 bg-red-400 text-black rounded\">{error}</p>}\n\n      {/* Order History Table with Search */}\n      {filteredOrders.length > 0 && (\n        <div className=\"mt-6\">\n          <h3 className=\"text-xl font-bold mb-2\">Order History</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse border border-gray-600\">\n              <thead>\n                <tr className=\"bg-gray-700 text-white\">\n                  <th className=\"border border-gray-600 p-2\">Order ID</th>\n                  <th className=\"border border-gray-600 p-2\">Security ID</th>\n                  <th className=\"border border-gray-600 p-2\">Side</th>\n                  <th className=\"border border-gray-600 p-2\">Order Type</th>\n                  <th className=\"border border-gray-600 p-2\">Quantity</th>\n                  <th className=\"border border-gray-600 p-2\">Price</th>\n                  <th className=\"border border-gray-600 p-2\">Product Type</th>\n                  <th className=\"border border-gray-600 p-2\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredOrders.map((order, index) => (\n                  <tr key={index} className=\"bg-gray-800 text-white\">\n                    <td className=\"border border-gray-600 p-2\">{order.orderId || order.id || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.security_id || order.symbol || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.transaction_type || order.side || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.order_type || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.quantity || order.origQty || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.price > 0 ? order.price : \"-\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.product_type || \"N/A\"}</td>\n                    <td className=\"border border-gray-600 p-2\">{order.status || \"Pending\"}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {successMessage && <p className=\"mt-4 p-2 bg-green-600 text-white rounded\">{successMessage}</p>}\n    </div>\n  );\n};\n\nexport default PlaceOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA8BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         <Header />\n//         <div className=\"flex mt-5\">\n//           <Sidebar setSelectedOrder={setSelectedOrder} />\n//           <div className=\"flex-1 p-5\">\n//             <Routes>\n//               <Route path=\"/\" element={<Dashboard />} />\n//               <Route path=\"/place-order\" element={<PlaceOrder />} />\n//               <Route path=\"/pnl-report\" element={<PnLReport />} />\n//               <Route path=\"/LoginPage\" element={<LoginPage />} />\n//               {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//               <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//               <Route path=\"/binance_order\" element={<OrderHistory />} />\n//               <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         {isLoggedIn ? (\n//           <>\n//             <Header />\n//             <div className=\"flex mt-5\">\n//               <Sidebar setSelectedOrder={setSelectedOrder} />\n//               <div className=\"flex-1 p-5\">\n//                 <Routes>\n//                   <Route path=\"/\" element={<Dashboard />} />\n//                   <Route path=\"/place-order\" element={<PlaceOrder />} />\n//                   <Route path=\"/pnl-report\" element={<PnLReport />} />\n//                   {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//                   <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//                   <Route path=\"/binance_order\" element={<OrderHistory />} />\n//                   <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//                 </Routes>\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           <Routes>\n//             <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           </Routes>\n//         )}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform login validation here\n    if (username === \"user\" && password === \"password\") {\n      onLogin(); // Update the login state in App component\n      navigate(\"/\"); // Redirect to the dashboard or home page\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-gray-800 p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 p-2 rounded hover:bg-blue-600\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/App.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n\n// const App = () => {\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         <Header />\n//         <div className=\"flex mt-5\">\n//           <Sidebar setSelectedOrder={setSelectedOrder} />\n//           <div className=\"flex-1 p-5\">\n//             <Routes>\n//               <Route path=\"/\" element={<Dashboard />} />\n//               <Route path=\"/place-order\" element={<PlaceOrder />} />\n//               <Route path=\"/pnl-report\" element={<PnLReport />} />\n//               <Route path=\"/LoginPage\" element={<LoginPage />} />\n//               {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//               <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//               <Route path=\"/binance_order\" element={<OrderHistory />} />\n//               <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         {isLoggedIn ? (\n//           <>\n//             <Header />\n//             <div className=\"flex mt-5\">\n//               <Sidebar setSelectedOrder={setSelectedOrder} />\n//               <div className=\"flex-1 p-5\">\n//                 <Routes>\n//                   <Route path=\"/\" element={<Dashboard />} />\n//                   <Route path=\"/place-order\" element={<PlaceOrder />} />\n//                   <Route path=\"/pnl-report\" element={<PnLReport />} />\n//                   {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//                   <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//                   <Route path=\"/binance_order\" element={<OrderHistory />} />\n//                   <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//                 </Routes>\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           <Routes>\n//             <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           </Routes>\n//         )}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginPage = ({ onLogin }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Perform login validation here\n    if (username === \"user\" && password === \"password\") {\n      onLogin(); // Update the login state in App component\n      navigate(\"/\"); // Redirect to the dashboard or home page\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <form onSubmit={handleSubmit} className=\"bg-gray-800 p-8 rounded-lg shadow-lg\">\n        <h2 className=\"text-2xl mb-4\">Login</h2>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2\">Username</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2\">Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full p-2 rounded bg-gray-700\"\n          />\n        </div>\n        <button type=\"submit\" className=\"w-full bg-blue-500 p-2 rounded hover:bg-blue-600\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIP,QAAQ,KAAK,MAAM,IAAIE,QAAQ,KAAK,UAAU,EAAE;MAClDJ,OAAO,CAAC,CAAC,CAAC,CAAC;MACXM,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLI,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,2CAA2C;IAAAC,QAAA,eACxDd,OAAA;MAAMe,QAAQ,EAAEN,YAAa;MAACI,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBAC5Ed,OAAA;QAAIa,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCnB,OAAA;QAAKa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBd,OAAA;UAAOa,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CnB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjB,QAAS;UAChBkB,QAAQ,EAAGZ,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;UAC7CR,SAAS,EAAC;QAAgC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAKa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBd,OAAA;UAAOa,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CnB,OAAA;UACEoB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEf,QAAS;UAChBgB,QAAQ,EAAGZ,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;UAC7CR,SAAS,EAAC;QAAgC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAAC;MAEnF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5CIF,SAAS;EAAA,QAGIH,WAAW;AAAA;AAAA0B,EAAA,GAHxBvB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
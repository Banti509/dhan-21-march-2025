{"ast":null,"code":"import axios from 'axios';\nconst Util = {\n  call_get_with_uri_param: async (uri_with_param, callback, type) => {\n    let URL;\n    URL = process.env.REACT_APP_BASE_URL;\n    const apiKey = process.env.REACT_APP_API_KEY;\n    let url = URL + uri_with_param;\n    if (url.includes(\"?\")) {\n      url = `${url}&apikey=${apiKey}`;\n    } else {\n      url = `${url}?apikey=${apiKey}`;\n    }\n    let resType;\n    if (type === 'arraybuffer' || type === 'blob' || type === 'document' || type === 'json' || type === 'text' || type === 'stream') {\n      resType = type;\n    }\n    callApi_get(url, resType).then(res => {\n      if (callback) {\n        // console.log('get response ======> ', JSON.stringify(res.data));\n        const status = true;\n        callback(res.data, status);\n      }\n    }).catch(function (error) {\n      if (error.response !== undefined) {\n        console.log(\"get error =====> \", error.response);\n        if (axios.isCancel(error)) {\n          console.log(\"Request canceled\", error.message);\n        } else if (error.response.status === \"401\" || error.response.statusText === \"Unauthorized\") {\n          console.log(\"Unauthorized\");\n        } else {\n          const status = false;\n          callback(error.response.data, status);\n        }\n      }\n    });\n  }\n};\nexport const callApi_get = async (url, resType) => {\n  return await axios.get(url, {\n    ...(resType ? {\n      responseType: resType\n    } : {}),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n};\nexport default Util;","map":{"version":3,"names":["axios","Util","call_get_with_uri_param","uri_with_param","callback","type","URL","process","env","REACT_APP_BASE_URL","apiKey","REACT_APP_API_KEY","url","includes","resType","callApi_get","then","res","status","data","catch","error","response","undefined","console","log","isCancel","message","statusText","get","responseType","headers"],"sources":["D:/stock-alphavantage/src/helpers/Util.js"],"sourcesContent":["import axios from 'axios';\n\nconst Util = {\n    call_get_with_uri_param: async (uri_with_param, callback, type) => {\n        let URL;\n        URL = process.env.REACT_APP_BASE_URL\n        const apiKey = process.env.REACT_APP_API_KEY;\n        let url = URL + uri_with_param;\n        if (url.includes(\"?\")) {\n            url = `${url}&apikey=${apiKey}`;\n        } else {\n            url = `${url}?apikey=${apiKey}`;\n        }\n        let resType;\n        if (type === 'arraybuffer' || type === 'blob' || type === 'document' || type === 'json' || type === 'text' || type === 'stream') {\n            resType = type;\n        }\n        callApi_get(url, resType)\n            .then((res) => {\n                if (callback) {\n                    // console.log('get response ======> ', JSON.stringify(res.data));\n                    const status = true;\n                    callback(res.data, status);\n                }\n            })\n            .catch(function (error) {\n                if (error.response !== undefined) {\n                    console.log(\"get error =====> \", error.response);\n                    if (axios.isCancel(error)) {\n                        console.log(\"Request canceled\", error.message);\n                    } else if (error.response.status === \"401\" || error.response.statusText === \"Unauthorized\") {\n                        console.log(\"Unauthorized\");\n                    } else {\n                        const status = false;\n                        callback(error.response.data, status);\n                    }\n                }\n            });\n    },\n};\n\nexport const callApi_get = async (url, resType) => {\n    return await axios.get(url, {\n        ...(resType ? { responseType: resType } : {}),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n};\n\nexport default Util;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAG;EACTC,uBAAuB,EAAE,MAAAA,CAAOC,cAAc,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAC/D,IAAIC,GAAG;IACPA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;IACpC,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;IAC5C,IAAIC,GAAG,GAAGN,GAAG,GAAGH,cAAc;IAC9B,IAAIS,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACnBD,GAAG,GAAG,GAAGA,GAAG,WAAWF,MAAM,EAAE;IACnC,CAAC,MAAM;MACHE,GAAG,GAAG,GAAGA,GAAG,WAAWF,MAAM,EAAE;IACnC;IACA,IAAII,OAAO;IACX,IAAIT,IAAI,KAAK,aAAa,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,QAAQ,EAAE;MAC7HS,OAAO,GAAGT,IAAI;IAClB;IACAU,WAAW,CAACH,GAAG,EAAEE,OAAO,CAAC,CACpBE,IAAI,CAAEC,GAAG,IAAK;MACX,IAAIb,QAAQ,EAAE;QACV;QACA,MAAMc,MAAM,GAAG,IAAI;QACnBd,QAAQ,CAACa,GAAG,CAACE,IAAI,EAAED,MAAM,CAAC;MAC9B;IACJ,CAAC,CAAC,CACDE,KAAK,CAAC,UAAUC,KAAK,EAAE;MACpB,IAAIA,KAAK,CAACC,QAAQ,KAAKC,SAAS,EAAE;QAC9BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,KAAK,CAACC,QAAQ,CAAC;QAChD,IAAItB,KAAK,CAAC0B,QAAQ,CAACL,KAAK,CAAC,EAAE;UACvBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAACM,OAAO,CAAC;QAClD,CAAC,MAAM,IAAIN,KAAK,CAACC,QAAQ,CAACJ,MAAM,KAAK,KAAK,IAAIG,KAAK,CAACC,QAAQ,CAACM,UAAU,KAAK,cAAc,EAAE;UACxFJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC/B,CAAC,MAAM;UACH,MAAMP,MAAM,GAAG,KAAK;UACpBd,QAAQ,CAACiB,KAAK,CAACC,QAAQ,CAACH,IAAI,EAAED,MAAM,CAAC;QACzC;MACJ;IACJ,CAAC,CAAC;EACV;AACJ,CAAC;AAED,OAAO,MAAMH,WAAW,GAAG,MAAAA,CAAOH,GAAG,EAAEE,OAAO,KAAK;EAC/C,OAAO,MAAMd,KAAK,CAAC6B,GAAG,CAACjB,GAAG,EAAE;IACxB,IAAIE,OAAO,GAAG;MAAEgB,YAAY,EAAEhB;IAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7CiB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;AACN,CAAC;AAED,eAAe9B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
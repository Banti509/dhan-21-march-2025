{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-alphavantage\\\\src\\\\components\\\\OrderHistory.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n\n// const OrderHistory = () => {\n//   const [orders, setOrders] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/orders\") // Update with your Flask API endpoint\n//       .then((response) => response.json())\n//       .then((data) => setOrders(data))\n//       .catch((error) => console.error(\"Error fetching orders:\", error));\n//   }, []);\n\n//   return (\n//     <div className=\"container mx-auto p-6\">\n//       <h2 className=\"text-xl font-bold mb-4\">Order History</h2>\n//       <table className=\"w-full border border-gray-700 text-left text-sm bg-black text-white\">\n//         <thead>\n//           <tr className=\"border-b border-gray-600\">\n//             <th className=\"p-2\">Time</th>\n//             <th className=\"p-2\">Symbol</th>\n//             <th className=\"p-2\">Type</th>\n//             <th className=\"p-2\">Side</th>\n//             <th className=\"p-2\">Average</th>\n//             <th className=\"p-2\">Executed</th>\n//             <th className=\"p-2\">Amount</th>\n//             <th className=\"p-2\">Status</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order.order_id} className=\"border-b border-gray-600\">\n//               <td className=\"p-2\">{new Date(order.update_time).toLocaleString()}</td>\n//               <td className=\"p-2\">{order.symbol}</td>\n//               <td className=\"p-2\">{order.order_type}</td>\n//               <td className={`p-2 ${order.side === \"BUY\" ? \"text-green-500\" : \"text-red-500\"}`}>\n//                 {order.side}\n//               </td>\n//               <td className=\"p-2\">{order.price || \"-\"}</td>\n//               <td className=\"p-2\">{order.quantity}</td>\n//               <td className=\"p-2\">{order.quantity}</td>\n//               <td className={`p-2 ${order.status === \"Filled\" ? \"text-green-400\" : \"text-yellow-400\"}`}>\n//                 {order.status}\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default OrderHistory;\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderHistory = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/binance_order\") // ðŸ”¥ Flask API se data fetch karna\n    .then(response => response.json()).then(data => setOrders(data)).catch(error => console.error(\"Error fetching orders:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border border-gray-700 text-left text-sm bg-black text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: order.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: order.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: order.order_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `p-2 ${order.side === \"BUY\" ? \"text-green-500\" : \"text-red-500\"}`,\n            children: order.side\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: order.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: order.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `p-2 ${order.status === \"Filled\" ? \"text-green-400\" : \"text-yellow-400\"}`,\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderHistory, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrderHistory;\nexport default OrderHistory;\nvar _c;\n$RefreshReg$(_c, \"OrderHistory\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","OrderHistory","_s","orders","setOrders","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","id","symbol","order_type","side","price","quantity","status","_c","$RefreshReg$"],"sources":["D:/stock-alphavantage/src/components/OrderHistory.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n\r\n// const OrderHistory = () => {\r\n//   const [orders, setOrders] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/orders\") // Update with your Flask API endpoint\r\n//       .then((response) => response.json())\r\n//       .then((data) => setOrders(data))\r\n//       .catch((error) => console.error(\"Error fetching orders:\", error));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-6\">\r\n//       <h2 className=\"text-xl font-bold mb-4\">Order History</h2>\r\n//       <table className=\"w-full border border-gray-700 text-left text-sm bg-black text-white\">\r\n//         <thead>\r\n//           <tr className=\"border-b border-gray-600\">\r\n//             <th className=\"p-2\">Time</th>\r\n//             <th className=\"p-2\">Symbol</th>\r\n//             <th className=\"p-2\">Type</th>\r\n//             <th className=\"p-2\">Side</th>\r\n//             <th className=\"p-2\">Average</th>\r\n//             <th className=\"p-2\">Executed</th>\r\n//             <th className=\"p-2\">Amount</th>\r\n//             <th className=\"p-2\">Status</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {orders.map((order) => (\r\n//             <tr key={order.order_id} className=\"border-b border-gray-600\">\r\n//               <td className=\"p-2\">{new Date(order.update_time).toLocaleString()}</td>\r\n//               <td className=\"p-2\">{order.symbol}</td>\r\n//               <td className=\"p-2\">{order.order_type}</td>\r\n//               <td className={`p-2 ${order.side === \"BUY\" ? \"text-green-500\" : \"text-red-500\"}`}>\r\n//                 {order.side}\r\n//               </td>\r\n//               <td className=\"p-2\">{order.price || \"-\"}</td>\r\n//               <td className=\"p-2\">{order.quantity}</td>\r\n//               <td className=\"p-2\">{order.quantity}</td>\r\n//               <td className={`p-2 ${order.status === \"Filled\" ? \"text-green-400\" : \"text-yellow-400\"}`}>\r\n//                 {order.status}\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst OrderHistory = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/binance_order\") // ðŸ”¥ Flask API se data fetch karna\r\n      .then((response) => response.json())\r\n      .then((data) => setOrders(data))\r\n      .catch((error) => console.error(\"Error fetching orders:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Order History</h2>\r\n      <table className=\"w-full border border-gray-700 text-left text-sm bg-black text-white\">\r\n        <thead>\r\n          <tr className=\"border-b border-gray-600\">\r\n            <th className=\"p-2\">ID</th>\r\n            <th className=\"p-2\">Symbol</th>\r\n            <th className=\"p-2\">Type</th>\r\n            <th className=\"p-2\">Side</th>\r\n            <th className=\"p-2\">Price</th>\r\n            <th className=\"p-2\">Quantity</th>\r\n            <th className=\"p-2\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order) => (\r\n            <tr key={order.id} className=\"border-b border-gray-600\">\r\n              <td className=\"p-2\">{order.id}</td>\r\n              <td className=\"p-2\">{order.symbol}</td>\r\n              <td className=\"p-2\">{order.order_type}</td>\r\n              <td className={`p-2 ${order.side === \"BUY\" ? \"text-green-500\" : \"text-red-500\"}`}>\r\n                {order.side}\r\n              </td>\r\n              <td className=\"p-2\">{order.price}</td>\r\n              <td className=\"p-2\">{order.quantity}</td>\r\n              <td className={`p-2 ${order.status === \"Filled\" ? \"text-green-400\" : \"text-yellow-400\"}`}>\r\n                {order.status}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
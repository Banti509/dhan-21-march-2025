{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         <Header />\n//         <div className=\"flex mt-5\">\n//           <Sidebar setSelectedOrder={setSelectedOrder} />\n//           <div className=\"flex-1 p-5\">\n//             <Routes>\n//               <Route path=\"/\" element={<Dashboard />} />\n//               <Route path=\"/place-order\" element={<PlaceOrder />} />\n//               <Route path=\"/pnl-report\" element={<PnLReport />} />\n//               <Route path=\"/LoginPage\" element={<LoginPage />} />\n//               {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//               <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//               <Route path=\"/binance_order\" element={<OrderHistory />} />\n//               <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         {isLoggedIn ? (\n//           <>\n//             <Header />\n//             <div className=\"flex mt-5\">\n//               <Sidebar setSelectedOrder={setSelectedOrder} />\n//               <div className=\"flex-1 p-5\">\n//                 <Routes>\n//                   <Route path=\"/\" element={<Dashboard />} />\n//                   <Route path=\"/place-order\" element={<PlaceOrder />} />\n//                   <Route path=\"/pnl-report\" element={<PnLReport />} />\n//                   {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//                   <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//                   <Route path=\"/binance_order\" element={<OrderHistory />} />\n//                   <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//                 </Routes>\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           <Routes>\n//             <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           </Routes>\n//         )}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport Dashboard from \"./components/Dashboard\";\nimport PlaceOrder from \"./components/PlaceOrder\";\nimport PnLReport from \"./components/PnlReport\";\nimport LoginPage from \"./components/LoginPage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white min-h-screen p-5\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n            setSelectedOrder: setSelectedOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 p-5\",\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/place-order\",\n                element: /*#__PURE__*/_jsxDEV(PlaceOrder, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/pnl-report\",\n                element: /*#__PURE__*/_jsxDEV(PnLReport, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DGJVWFT7drSQIiwCaDTr1yNpER4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Header","Sidebar","Dashboard","PlaceOrder","PnLReport","LoginPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","selectedOrder","setSelectedOrder","handleLogin","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["/home/hp/Documents/Dhan_Trading_Bot/dhan_frontend/src/App.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n\n// const App = () => {\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         <Header />\n//         <div className=\"flex mt-5\">\n//           <Sidebar setSelectedOrder={setSelectedOrder} />\n//           <div className=\"flex-1 p-5\">\n//             <Routes>\n//               <Route path=\"/\" element={<Dashboard />} />\n//               <Route path=\"/place-order\" element={<PlaceOrder />} />\n//               <Route path=\"/pnl-report\" element={<PnLReport />} />\n//               <Route path=\"/LoginPage\" element={<LoginPage />} />\n//               {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//               <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//               <Route path=\"/binance_order\" element={<OrderHistory />} />\n//               <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Header from \"./components/Header\"; \n// import Sidebar from \"./components/Sidebar\";\n// import Dashboard from \"./components/Dashboard\";\n// import PlaceOrder from \"./components/PlaceOrder\";\n// import PnLReport from \"./components/PnlReport\";\n// // import ModifyOrder from \"./components/ModifyOrder\";\n// // import CancelOrder from \"./components/OrderCancel\";\n// // import OrderHistory from \"./components/OrderHistory\";\n// // import Dummypnlreport from \"./components/DummyPnLReport\";\n// import LoginPage from \"./components/LoginPage\";\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n//         {isLoggedIn ? (\n//           <>\n//             <Header />\n//             <div className=\"flex mt-5\">\n//               <Sidebar setSelectedOrder={setSelectedOrder} />\n//               <div className=\"flex-1 p-5\">\n//                 <Routes>\n//                   <Route path=\"/\" element={<Dashboard />} />\n//                   <Route path=\"/place-order\" element={<PlaceOrder />} />\n//                   <Route path=\"/pnl-report\" element={<PnLReport />} />\n//                   {/* <Route path=\"/modify-order\" element={<ModifyOrder />} />\n//                   <Route path=\"/cancel-order\" element={<CancelOrder />} />\n//                   <Route path=\"/binance_order\" element={<OrderHistory />} />\n//                   <Route path=\"/dummy_pnl_report\" element={<Dummypnlreport />} /> */}\n//                 </Routes>\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           <Routes>\n//             <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           </Routes>\n//         )}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Header from \"./components/Header\"; \nimport Sidebar from \"./components/Sidebar\";\nimport Dashboard from \"./components/Dashboard\";\nimport PlaceOrder from \"./components/PlaceOrder\";\nimport PnLReport from \"./components/PnlReport\";\nimport LoginPage from \"./components/LoginPage\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <Router>\n      <div className=\"bg-gray-900 text-white min-h-screen p-5\">\n        {isLoggedIn ? (\n          <>\n            <Header />\n            <div className=\"flex mt-5\">\n              <Sidebar setSelectedOrder={setSelectedOrder} />\n              <div className=\"flex-1 p-5\">\n                <Routes>\n                  <Route path=\"/\" element={<Dashboard />} />\n                  <Route path=\"/place-order\" element={<PlaceOrder />} />\n                  <Route path=\"/pnl-report\" element={<PnLReport />} />\n                </Routes>\n              </div>\n            </div>\n          </>\n        ) : (\n          <Routes>\n            <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n          </Routes>\n        )}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
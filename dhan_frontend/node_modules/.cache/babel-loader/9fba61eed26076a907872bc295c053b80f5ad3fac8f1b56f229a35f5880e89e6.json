{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-alphavantage\\\\src\\\\components\\\\StockChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StockChart = ({\n  stockData\n}) => {\n  if (!stockData || !stockData[\"Meta Data\"] || !stockData[\"Time Series (5min)\"]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500\",\n      children: \"No stock data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    \"Meta Data\": metaData,\n    \"Time Series (5min)\": timeSeries\n  } = stockData;\n  const timeLabels = Object.keys(timeSeries).reverse().map(time => moment(time).format('HH:mm'));\n  const closingPrices = timeLabels.map((_, index) => {\n    const key = Object.keys(timeSeries).reverse()[index];\n    return timeSeries[key][\"4. close\"];\n  });\n  const chartData = {\n    labels: timeLabels,\n    datasets: [{\n      label: `Closing Prices for ${metaData[\"2. Symbol\"]}`,\n      data: closingPrices,\n      fill: false,\n      borderColor: 'rgba(75,192,192,1)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Stock Prices'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      metaData: metaData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Stock Chart: \", metaData[\"2. Symbol\"]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","Line","moment","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Header","jsxDEV","_jsxDEV","register","StockChart","stockData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","metaData","timeSeries","timeLabels","Object","keys","reverse","map","time","format","closingPrices","_","index","key","chartData","labels","datasets","label","data","fill","borderColor","tension","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["D:/stock-alphavantage/src/components/StockChart.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport Header from './Header';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst StockChart = ({ stockData }) => {\n    if (!stockData || !stockData[\"Meta Data\"] || !stockData[\"Time Series (5min)\"]) {\n        return <div className=\"text-center text-red-500\">No stock data available</div>;\n    }\n\n    const { \"Meta Data\": metaData, \"Time Series (5min)\": timeSeries } = stockData;\n\n    const timeLabels = Object.keys(timeSeries).reverse().map(time => moment(time).format('HH:mm'));\n\n    const closingPrices = timeLabels.map((_, index) => {\n        const key = Object.keys(timeSeries).reverse()[index];\n        return timeSeries[key][\"4. close\"];\n    });\n\n    const chartData = {\n        labels: timeLabels,\n        datasets: [\n            {\n                label: `Closing Prices for ${metaData[\"2. Symbol\"]}`,\n                data: closingPrices,\n                fill: false,\n                borderColor: 'rgba(75,192,192,1)',\n                tension: 0.1,\n            },\n        ],\n    };\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: true,\n                text: 'Stock Prices',\n            },\n        },\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <Header metaData={metaData} />\n            <h2 className=\"text-xl font-bold mb-4\">Stock Chart: {metaData[\"2. Symbol\"]}</h2>\n            <Line data={chartData} options={options} />\n        </div>\n    );\n};\n\nexport default StockChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}